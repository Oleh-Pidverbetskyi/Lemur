*,::after,::before{-webkit-box-sizing:border-box;box-sizing:border-box}body,html{font-weight:400}html{scroll-behavior:smooth;font-family:"Inter",sans-serif;font-style:normal}body{min-height:100vh;text-rendering:optimizeSpeed;font-size:1rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}blockquote,body,dd,dl,figcaption,figure,h1,h2,h3,h4,li,ol,p,ul{margin:0}ol,ul{padding:0;list-style:none}img,span{display:block}input,select,textarea{outline:0;font:inherit}input:-webkit-autofill,input:-webkit-autofill:focus,input:-webkit-autofill:hover,select:-webkit-autofill,select:-webkit-autofill:focus,select:-webkit-autofill:hover,textarea:-webkit-autofill,textarea:-webkit-autofill:focus,textarea:-webkit-autofill:hover{-webkit-transition:background-color 5000s ease-in-out 0s;transition:background-color 5000s ease-in-out 0s}h1,h2,h3{font-weight:400}.container{max-width:86.5rem;margin:0 auto}@media (max-width:1440px){.container{padding:0 1.25rem}}.header{background:#000}.header__search-box{display:-webkit-box;display:-ms-flexbox;display:flex;width:12.75rem;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}@media (max-width:400px){.header__search-box{width:10rem}}.header__search{background:url(../img/search-icon.svg) no-repeat right .625rem center;width:2.5rem;-webkit-transition:width .4s ease-in-out;transition:width .4s ease-in-out;border:.0625rem solid transparent;padding:.3125rem 1.25rem;cursor:pointer;color:#fff}.header__search:focus{width:100%;border:.0625rem solid #fff;color:#fff}.header__search::-webkit-input-placeholder{color:#fff}.header__search::-moz-placeholder{color:#fff}.header__search:-ms-input-placeholder{color:#fff}.header__search::-ms-input-placeholder{color:#fff}.header__search::placeholder{color:#fff}.header-container{padding:1rem 1.125rem .375rem;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:400px){.header-container{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}}.navigation{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@media (max-width:1200px){.navigation{display:none}}.navigation__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:30px}.navigation__link{font:1rem/1.1875rem Inter;text-decoration:none;color:#fff;-webkit-transition:color .5s;transition:color .5s}.navigation__link:hover{color:#2e38ed}.head{padding:29.3125rem 0 2.25rem;background:-webkit-gradient(linear,left top,left bottom,from(transparent),color-stop(83.5%,rgba(0,0,0,.6))),url(../img/lemur.svg) no-repeat center center;background:linear-gradient(180deg,transparent 0,rgba(0,0,0,.6) 83.5%),url(../img/lemur.svg) no-repeat center center;background-size:cover!important}@media (max-width:1024px){.head{padding:6.25rem 0 2.25rem}}@media (max-width:600px){.head{position:relative;padding:12.5rem 0 0;height:100vh}}.head__title{max-width:1003px;margin:0 auto;font-size:4rem;line-height:4.840625rem;color:#fff;margin-bottom:1.625rem;text-align:center}@media (max-width:680px){.head__title{font-size:2.1875rem;line-height:2.8125rem}}.head__text{max-width:1171px;line-height:1.5125rem;font-size:1.25rem;color:#fff;text-align:center;margin:0 auto 52px}@media (max-width:680px){.head__text{font-size:.875rem}}.head__icon{display:block;margin:0 auto;cursor:pointer}@media (max-width:600px){.head__icon{position:absolute;bottom:35px;left:48%}}.general{padding:.8125rem 0 1.9375rem}.general__wrap{display:-webkit-box;display:-ms-flexbox;display:flex;gap:2.125rem}@media (max-width:1284px){.general__wrap{gap:.9375rem}}@media (max-width:1200px){.general__wrap{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.general__left-block{max-width:612px}@media (max-width:1200px){.general__left-block{margin:0 auto}}.general__left-block-img-wrap{max-width:612px;height:auto;margin-bottom:8px}.general__img{max-width:612px;height:auto;-o-object-fit:cover;object-fit:cover}@media (max-width:680px){.general__img{width:300px;height:auto;margin:0 auto}}.general__left-block-title{line-height:1.5125rem;font-size:1.25rem;margin-bottom:7px}.general__left-block-text{font-size:14px;line-height:1.05875rem;margin-bottom:20px;font-weight:300}.general__left-block-text:nth-child(5){margin-bottom:10px}.card-wrap{display:-webkit-box;display:-ms-flexbox;display:flex;gap:37px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}@media (max-width:670px){.card-wrap{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.card{display:block;padding:13.125rem .75rem .75rem;max-width:284px;text-decoration:none;color:#fff;background:url(../img/news-lemur.svg) no-repeat center center;background-size:cover;position:relative;overflow:hidden}.card__title{font-size:20px;line-height:1.05875rem;margin-bottom:20px}.card__text{font-weight:300;font-size:12px;color:#000;color:rgba(255,255,255,.6)}.card__box-hover{position:relative;-webkit-transition:-webkit-transform .4s ease-in-out;transition:transform .4s ease-in-out;transition:transform .4s ease-in-out,-webkit-transform .4s ease-in-out}.card:hover .card__box-hover{-webkit-transform:translateY(-10px);-ms-transform:translateY(-10px);transform:translateY(-10px)}.top-block{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;gap:26px;margin-bottom:22px}@media (max-width:1440px){.top-block{gap:15px}}@media (max-width:1200px){.top-block{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;gap:50px}}@media (max-width:680px){.top-block{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}}.user__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;gap:35px}@media (max-width:1440px){.user__list{width:270px}}.user__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:.75rem}.user__photo-link{border-radius:50%;-webkit-transition:transform .8s;-webkit-transition:-webkit-transform .8s;transition:transform .8s;transition:transform .8s,-webkit-transform .8s;will-change:transform}.user__photo-link:hover{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9)}.user__img,.user__photo-link{width:107px;height:auto}.user__right-block{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.user__name-link{text-decoration:none;margin-bottom:30px;color:#000;-webkit-transition:color .5s;transition:color .5s}.user__name-link:hover{color:#2e38ed}.user__name{font-size:20px;line-height:1.05875rem}.user__position,.user__posts{font-size:.8125rem;line-height:.983125rem;font-weight:300}.banner{background:#000;width:368px;height:auto}@media (max-width:1440px){.banner{width:320px}}@media (max-width:1284px){.banner{width:250px}}@media (max-width:1200px){.banner{width:284px}}@media (max-width:680px){.banner{height:536px}}.banner__link,.news__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.banner__link{width:100%;height:100%;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;text-decoration:none;color:#fff;font-size:20px}.news__item{gap:13px;margin-bottom:35px}@media (max-width:680px){.news__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}}.news__link{text-decoration:none}.news__title{font-size:20px;line-height:1.05875rem;margin-bottom:20px;color:#000}.news__text{font-size:.8125rem;line-height:.983125rem;font-weight:300;color:#000}.news__img,.news__link-photo{width:231px;height:102px}.news__img{-o-object-fit:contain;object-fit:contain}.footer{background:#000;padding:.5rem 0}.footer__text{font-size:.8125rem;line-height:.983125rem;font-weight:300;color:#fff;text-align:center}@supports (-webkit-appearance:none){.header__search{background-image:url(../img/search-icon.svg) no-repeat right .625rem center}.head{background:-webkit-gradient(linear,left top,left bottom,from(transparent),color-stop(83.5%,rgba(0,0,0,.6))),url(../img/lemur.svg) no-repeat center center;background:linear-gradient(180deg,transparent 0,rgba(0,0,0,.6) 83.5%),url(../img/lemur.svg) no-repeat center center}.card{background:url(../img/news-lemur.svg) no-repeat center center}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */